diff --git a/CMakeLists.txt b/CMakeLists.txt
index 606426b6..950755ed 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -44,10 +44,10 @@ if (NOT THRUST_TOPLEVEL_PROJECT)
 endif()
 
 # We use 3.17 features when building our tests, etc.
-cmake_minimum_required(VERSION 3.17)
+cmake_minimum_required(VERSION 3.15)
 
 option(THRUST_ENABLE_HEADER_TESTING "Test that all public headers compile." "ON")
-option(THRUST_ENABLE_TESTING "Build Thrust testing suite." "ON")
+option(THRUST_ENABLE_TESTING "Build Thrust testing suite." "OFF")
 option(THRUST_ENABLE_EXAMPLES "Build Thrust examples." "ON")
 option(THRUST_ENABLE_BENCHMARKS "Build Thrust runtime benchmarks." "OFF")
 option(THRUST_INCLUDE_CUB_CMAKE "Build CUB tests and examples. (Requires CUDA)." "OFF")
diff --git a/cmake/ThrustBuildCompilerTargets.cmake b/cmake/ThrustBuildCompilerTargets.cmake
index aed0ec17..bd2084f2 100644
--- a/cmake/ThrustBuildCompilerTargets.cmake
+++ b/cmake/ThrustBuildCompilerTargets.cmake
@@ -34,7 +34,7 @@ function(thrust_build_compiler_targets)
     # and spurious warnings are emitted.
     # See NVIDIA/thrust#1273, NVBug 3129879.
     if (CMAKE_BUILD_TYPE STREQUAL "Release")
-      append_option_if_available("/WX" cxx_compile_options)
+      #append_option_if_available("/WX" cxx_compile_options)
     endif()
 
     # Suppress overly-pedantic/unavoidable warnings brought in with /W4:
@@ -75,8 +75,8 @@ function(thrust_build_compiler_targets)
     # "Oh right, this is Visual Studio."
     list(APPEND cxx_compile_definitions "NOMINMAX")
   else()
-    append_option_if_available("-Werror" cxx_compile_options)
-    append_option_if_available("-Wall" cxx_compile_options)
+    #append_option_if_available("-Werror" cxx_compile_options)
+    #append_option_if_available("-Wall" cxx_compile_options)
     append_option_if_available("-Wextra" cxx_compile_options)
     append_option_if_available("-Winit-self" cxx_compile_options)
     append_option_if_available("-Woverloaded-virtual" cxx_compile_options)
@@ -154,9 +154,9 @@ function(thrust_build_compiler_targets)
 
   # This is kept separate for Github issue #1174.
   add_library(thrust.promote_cudafe_warnings INTERFACE)
-  target_compile_options(thrust.promote_cudafe_warnings INTERFACE
-    $<$<AND:$<COMPILE_LANGUAGE:CUDA>,$<CUDA_COMPILER_ID:NVIDIA>>:-Xcudafe=--promote_warnings>
-  )
+  #target_compile_options(thrust.promote_cudafe_warnings INTERFACE
+  #  $<$<AND:$<COMPILE_LANGUAGE:CUDA>,$<CUDA_COMPILER_ID:NVIDIA>>:-Xcudafe=--promote_warnings>
+  #)
 
   # Some of our unit tests unconditionally throw exceptions, and compilers will
   # detect that the following instructions are unreachable. This is intentional
diff --git a/cmake/ThrustCudaConfig.cmake b/cmake/ThrustCudaConfig.cmake
index 8b8a756d..97630b2a 100644
--- a/cmake/ThrustCudaConfig.cmake
+++ b/cmake/ThrustCudaConfig.cmake
@@ -1,6 +1,7 @@
 enable_language(CUDA)
 
-set(THRUST_KNOWN_COMPUTE_ARCHS 35 37 50 52 53 60 61 62 70 72 75 80 86 90)
+#set(THRUST_KNOWN_COMPUTE_ARCHS 35 37 50 52 53 60 61 62 70 72 75)
+set(THRUST_KNOWN_COMPUTE_ARCHS 35 37 50 52 53 60 61 62 70 72 75)
 
 # Split CUDA_FLAGS into 3 parts:
 #
diff --git a/dependencies/cub b/dependencies/cub
--- a/dependencies/cub
+++ b/dependencies/cub
@@ -1 +1 @@
-Subproject commit 8bdb54d8933278a2af0890761d1e9c85de697652
+Subproject commit 8bdb54d8933278a2af0890761d1e9c85de697652-dirty
diff --git a/internal/build/common_compiler.mk b/internal/build/common_compiler.mk
index 02015936..a7d68c1b 100644
--- a/internal/build/common_compiler.mk
+++ b/internal/build/common_compiler.mk
@@ -1,6 +1,7 @@
 ifeq ($(OS),$(filter $(OS),Linux Darwin))
   ifndef USEPGCXX
-    CUDACC_FLAGS += -Xcompiler "-Wall -Wextra -Werror"
+    #CUDACC_FLAGS += -Xcompiler "-Wall -Wextra -Werror"
+    CUDACC_FLAGS += Xcompiler "-Wall"
 
     ifdef USEXLC
       CXX_STD := c++14
@@ -126,7 +127,7 @@ else ifeq ($(OS),win32)
 endif
 
 # Promote all NVCC warnings into errors
-CUDACC_FLAGS += -Werror all-warnings
+#CUDACC_FLAGS += -Werror all-warnings
 
 # Print warning numbers with cudafe diagnostics
 CUDACC_FLAGS += -Xcudafe --display_error_number
